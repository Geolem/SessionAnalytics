{
  "hello": "Hello",
  "recently_visited": "Recently visited",
  "home": "Home",
  "upload": "Upload",
  "sankey": "Sankey",
  "funnel": "Funnel",
  "clustering": "Mining",
  "help": "Demo & Help",
  "version": "Version",
  "task": "task",
  "progress_task": "In Progress",
  "completed_task": "Completed",
  "failed_task": "Failed",
  "data_upload": "Data Upload",
  "add_upload_csv": "Upload CSV",
  "title": "Title",
  "scene_description": "Dataset Description",
  "scene_description_p": "eg:User path information flow demo data",
  "please_scene_description": "please enter description",
  "slice_the_session_event": "Slice Event",
  "please_slice_the_session_event": "please enter slice the session event",
  "time_interval": "Time Interval",
  "please_time_interval": "please enter time interval",
  "csv_file": "CSV File",
  "preview": "Preview",
  "demo_csv": "Demo.csv",
  "example_title": "eg:Example title",
  "example_scenario_description": "eg:Example scenario description",
  "example_xxx_event": "eg:XXX event",
  "xx_minute": "eg:XXX minute",
  "all": "All",
  "conduct": "In Progress",
  "waiting": "Waiting",
  "completed": "Completed",
  "fail": "Failed",
  "please_placeholder": "Please enter a title",
  "task_list": "Upload Task List",
  "create_user": "Creator",
  "creation_time": "Create Time",
  "task_execution_time": "End Time",
  "csv_upload": "CSV upload",
  "please_csv_upload": "please upload the file",
  "displays_sample_data": "Displays sample data",
  "scene_title": "DataSet",
  "scene_title_p": "eg:Information flow demo data",
  "submit": "Submit",
  "cancel": "Cancel",
  "please_click_scv": "Click or drag and drop the file here to upload",
  "extensions_supported": "Extensions are supported:.csv",
  "ok": "OK",
  "please_ok_csv": "Preview the fields of the CSV file and click OK after confirming the correctness",
  "please_upload_name": "please enter initial_data",
  "process_guidance": "Process Guidance",
  "operation_example": "Operation Example",
  "wait_for_the_task": "Execute Task",
  "view_notifications": "Task Complete",
  "view_the_analytics": "Data Analysis",
  "the_first_step": "Step One",
  "step_two": "Step Two",
  "step_three": "Step Three",
  "step_four": "Step Four",
  "step_five": "Step Five",
  "click_upload": "Click  upload",
  "Go_to_the_Upload_data_page": "Open upload page",
  "relevant_information": "Fill in the relevant information",
  "and_upload_CSV_file": "Upload CSV file、session maker、data sharding",
  "wait_task_execute": "Execute task",
  "task_execution_completes": "Task complete",
  "notify_the_user": "Notify the user",
  "review_the_results": "Data analysis",
  "analysis_options": "Analysis options",
  "category_repeat": "Scene(Repeat)",
  "category_not_repeating": "Scene(No-Repeat)",
  "subcategory_repeat": "Type(Repeat)",
  "subcategory_not_repeat": "Type(No-Repeat)",
  "event_repeat": "Event(Repeat)",
  "event_not_repeat": "Event(No-Repeat)",
  "path_initiation_hierarchy": "Start Layer",
  "end_of_path_hierarchy": "End Layer",
  "sessions_threshold": "Session Threshold",
  "category_classpath_path": "Scene Path Filter(With Layer)",
  "category_classpath_hierarchy": "Scene Path Filter(Without Layer)",
  "subcategor_classpath_path": "Type Path Filter(With Layer)",
  "subcategor_classpath_hierarchy": "Type Path Filter(Without Layer)",
  "event_classpath_path": "Event Path Filter(With Layer)",
  "event_classpath_hierarchy": "Event Path Filter(Without Layer)",
  "first_business_path": "First layer business path",
  "second_business_path": "Second layer business path",
  "three_business_path": "Three layer business path",
  "four_business_path": "Four layer business path",
  "day": " day",
  "month": " month",
  "year": " year",
  "hour": " hour",
  "min": " minute",
  "second": "second",
  "error_upload_type": "the uploaded file is in the wrong format",
  "data_upload_preview": "Data Preview",
  "f_user_id": "user_id",
  "f_age": "Age",
  "f_sex": "Gender",
  "f_province": "Province",
  "f_city": "City",
  "f_channel": "Channel",
  "f_client_time": "Client Time",
  "f_category": "scene",
  "f_subcategory": "type",
  "minute": "minute",
  "upload_msg": "(Note: Please do not include special characters in the upload field (e.g",
  "progress": "Progress",
  "operation": "Operation",
  "tree": "Tree",
  "chord": "Chord",
  "data_query": "Query",
  "user_id": "user_id",
  "inquire": "inquire",
  "apply": "APPLY",
  "reset": "Reset",
  "statistics": "Statistical",
  "trend": "Trend",
  "overview": "Overview",
  "age_distribution": "Age",
  "sex_distribution": "Gender",
  "provinces_distribution": "Province",
  "channel_distribution": "Channel",
  "ago": "ago",
  "recents": "Recents",
  "analysis_and_screening": "Filter and Analysis",
  "task_process": "Upload Task Status",
  "Example": "Example",
  "query_list": "Query List",
  "chord_chart": "Chord Chart",
  "tree_chart": "Tree Chart",
  "screening": "screening",
  "total_users": "Total User",
  "total_sessions": "Total Session",
  "total_pv": "Total PV",
  "session_distribution": "Session Distribution",
  "pv_distribution": "PV Distribution",
  "user_distribution": "User Distribution",
  "session_analytics": "Session Analysis",
  "PV_analytics": "PV Analysis",
  "number_of_users": "Total User",
  "total_session": "total sessions",
  "totals": "Total",
  "maximum": "Maximum",
  "minimum": "Minimum",
  "average": "Average",
  "median": "Median",
  "male": "Male",
  "female": "Female",
  "unKnow": "UnKnow",
  "province_distribution": "Province Distribution",
  "user_daily_trend": "User Daily Trend",
  "session_daily_trend": "Session Daily Trend",
  "pv_daily_trend": "PV Daily Trend",
  "select_trend_indicator": "Dimension Filter：",
  "maximum_PV": "Maximum PV",
  "minimum_PV": "Minimum PV",
  "average PV": "Average PV",
  "event": "Event",
  "category": "scene",
  "subcategory": "type",
  "user": "User",
  "cn": "CN",
  "en": "EN",
  "User_id": "UserId",
  "City": "City",
  "Scene": "Scene",
  "scene": "Scene",
  "Type": "Type",
  "type": "Type",
  "Date": "Date",
  "Channel": "Channel",
  "Distribution_Statistics": "Distribution Statistics",
  "Distribution_Proportion": "Distribution Proportion",
  "Scene_Statistics": "Scene Statistics",
  "Age_Session_Distribution": "Age Distribution",
  "Gender_Session_Distribution": "Gender Distribution",
  "Area_session_distribution": "Province Distribution",
  "Channel_session_analytics": "Channel Distribution",
  "total": "Total",
  "Profile_Factor": "Slihouette Coefficient Chart",
  "label": "Label",
  "Distribution_Details": "Distribution Details",
  "central_point": "Central Point",
  "Remove_Autocorrelation": "Remove Autocorrelation",
  "yes": "Yes",
  "no": "No",
  "start": "start",
  "Switch_Datasets": "Switch Dataset",
  "Datasets_Switch": "Dataset Switch",
  "Datasets": "Dataset",
  "Version": "Version",
  "center": "center",
  "tren": "Total Session",
  "Current_DataSet": "Current DataSet",
  "repetition": "The data set name is duplicate, please modify and resubmit",
  "duplicate dataset names": "The data set name is duplicate, please modify and resubmit",
  "Event": "Event",
  "Active open": "Active open",
  "Push open": "Push open",
  "All": "All",
  "Kmeans": "Kmeans Clustering",
  "dtw": "DTW Clutering",
  "To_evaluate": "To evaluate cluster effect, the closer to one, the better",
  "grey_line": "Grey line represent user sequence, red line represent label core",
  "platform_management": "Management",
  "total_uv": "Total UV",
  "total_PV": "Total PV",
  "high_frequency_user": "TOP10 Visitor",
  "access_details": "Access Detail",
  "pv": "PV",
  "first_directory": " First Directory",
  "second_directory": "Second Directory",
  "access_time": "Access Time",
  "please_enter_user": "Please enter the user name",
  "enter_app": "eg:Enter app",
  "sampling_data": "Sampling data (10 pieces of data in display), click pie chart to change label",
  "25-Quantile": "25-Quantile",
  "50-Quantile": "50-Quantile",
  "75-Quantile": "75-Quantile",
  "data_cleansing": "Cleaning",
  "click_to_look": "click to look over session maker module",
  "relate_to task": "Relate to task list, click \"Cleaning\" button to change",
  "upload_completed": "Upload Completed",
  "in_progress": "In Progress",
  "segment_completed": "Completed",
  "segment_failed": "Failed",
  "upload_status": "Upload Status",
  "segment_end_time": "Segment End Time",
  "segment_progess": "Segment Progess",
  "No": "No.",
  "original_scene": "Original Name",
  "mapping_scene": "Mapping Name",
  "Whether_to_start_slicing": "Whether to start cleaning?",
  "maker_task_list": "Task List",
  "maker_task_status": "Task Status",
  "file_restriction": "The document limit is 200M",
  "data_management": "Data Management",
  "data_slice": "Slice",
  "initial_data": "Initial DataSet",
  "cleansing_data": "Cleaning DataSet",
  "description": "Description",
  "initial_dataSet_list": "Initial DataSet List",
  "cleansing_dataSet_list": "Cleaning DataSet List",
  "governance_status": "Governance Status",
  "mapping_relation": "Mapping Relation",
  "segment_status": "Segment Status",
  "is_slicing": "Whether to start slicing ?",
  "segment": "Segment",
  "revise": "Modify",
  "data_mapping": "Data Mapping",
  "failed_to_obtain": "Failed to obtain the upload list",
  "wait_slice": "Waiting",
  "segment_task_status ": "Segment Task Status ",
  "upload_progress": "Upload Progress",
  "cleansing_progress": "Cleaning Progress",
  "slice_progress": "Segment Progress",
  "please_session_num": "Please enter a starting value",
  "please_session_num_end": "Please enter an end value",
  "greater_than": "Start is greater than end",
  "less_than": "End  is less than start",
  "clustergram": "Cluster Chart",
  "data_decoding": "Data Explanation",
  "maximum_scene_PV": "Maximum Scenario PV",
  "minimum_scene_PV": "Minimum Scenario PV",
  "average scene_PV": "Average Scenario PV",
  "algorithm_interpretation": "Algorithm Explanation",
  "instruction_and_filter": "Instruction and Filter",
  "data_instruction": "Data Instruction",
  "filter": "Filter",
  "step1": "Step One：Reorganize data by scene, eg: the pv of user1 in scene1, scene2 and scene3 is 10, 20 and 30, then this line is [user1, 10, 20, 30]",
  "step2": " Step Two：Reduce dimension of the matrix in step one (by PCA)",
  "step3": "Step Three：Kmeans cluster to k classes (2<=k<=5)",
  "step4": "Step Four：Determine k by silhouette coefficient",
  "get_statistical": "To get statistical data and explanation",
  "pca": "PCA",
  "extract_principal": "Extract principal component of the matrix, then map it to another space",
  "stp1": "Step One",
  "stp2": " Step Two",
  "input_matrix": "Input matrix X，target dimension is p",
  "centralize": "Centralize X to X’",
  "stp3": "Step Three",
  "decompose_x": "Decompose X’ by SVD, use top p eigenvector to form matrix V",
  "stp4": "Step Four",
  "new_matrix": "The new matrix is XV",
  "silhouette_coefficient": "Silhouette Coefficient",
  "param_a": "Param a",
  "average_distance": "Average distance between sample point and other points in same cluster",
  "average_next": "Average distance between sample point and all points in the next nearest cluster",
  "param_b": " Param b",
  "value_range": "Value range of s is (-1, 1) , The closer to 1, the better effect, the closer to -1, the worse effect",
  "step1_dtw": "Step One：Calculate session pv for users by day, eg: the session pv of user1 in day1, day2 and day3 is 10, 20 and 30, then this line is [user1, 10, 20, 30]",
  "step2_dtw": "Step Two：DTW cluster the matrix to k classes (2<=k<=5)",
  "step3_dtw": " Step Three：Determine k by silhouette coefficient",
  "Obtain_various": "Sorted by feature vector centrality, the higher the value, the higher the importance of nodes",
  "only_center": "Only represent center of each class",
  "class_detail": "Class Detail",
  "default_display_center": "Default display class 0，change class by filter\nEach gray line represent a user sequence, colored line represent class center",
  "sampling_data ": "Sampling Data",
  "default_display_sampling": "Default display class 0，change class by filter\nDisplay 10 sampling data",
  "Dtw": "DTW",
  "Input": "Input",
  "sequence_Q": "Sequence Q、sequence C，the length of them is m and n",
  "modeling_process": "Modeling Process",
  "construct_matrix": "Construct matrix W of m*n, use continental distance, then there is a warping path through the entire matrix",
  "constraint_condition": "Constraint Condition",
  "constraint_condition_explanation": "\n- The begining and end of two sequences must match\n - If many-to-one or one-to-many can only match one time step\n- Warping path is monotonically increasing",
  "question": "Question",
  "find_best": "Find best warping path",
  "algorithm": "Algorithm",
  "dynamic_programming": "dynamic programming",
  "please_label": "Please enter label",
  "path_layer": "Path Layer",
  "classpath_path": " Path Filter(With Layer)",
  "classpath_hierarchy": "Path Filter(without Layer)",
  "threshold": "Layer Threshold",
  "avg_sessions": "Average Session",
  "avg_pv": "Average Pv",
  "length_than_f": "Select a maximum of five items",
  "path_detail": "Path Detail",
  "from": "Start",
  "to": "END",
  "scene_from": "Scene Start",
  "scene_to": "Scene End",
  "type_from": "Type Start",
  "type_to": "Type End",
  "session_num": "Session Number",
  "user_num": "User Number",
  "bracket_l": "(",
  "bracket_r": ")",
  "x": "X",
  "y": "Y",
  "top_filter": "Top Filter",
  "default_top5": "Default display top Three,change top by filter",
  "pv_threshold": "PV Threshold",
  "user_threshold": "User Threshold",
  "right_click_path": "Click to view the distribution of each dimension in the path",
  "total_num": "Total",
  "session_percent": "Session Percent",
  "pv_percent": "PV Percent",
  "dimensional_distribution": "Dimensional Distribution",
  "file_type": "File Type:UTF-8",
  "system_demonstration": "System Demonstration",
  "business_case": "Business Case",
  "technical_framework": "Technical Framework",
  "LV": "LV",
  "graph": "Centrality",
  "node_name": "Node",
  "center_number": "Center Number",
  "step1_graph1": "Step 1：Define graph adjacencies (node, node, edge)",
  "step1_graph2": "Step 2：Generate an empty directed graph and add weighted edges to the network",
  "step1_graph3": "Step 3：Calculate the centrality of the feature vector and output the value",
  "Nodes are listed in descending order of importance": "Nodes are listed in descending order of importance",
  "Eigenvector centrality algorithm": "Eigenvector centrality algorithm",
  "its_importance": "The importance of a node depends on both the number of its neighbors (i.e. the degree of the node) and the importance of its neighbors",
  "assuming_that_xi": "Assuming that xi represents the importance of node i, the centrality of feature vector is calculated as follows",
  "aij": "Where c is a proportionality constant, aij = 1 if and only if i is connected to j, otherwise 0",
  "detailed_data": "Detailed Data",
  "node_filtering": "Node Filtering",
  "logOut": "Sign out"
}
